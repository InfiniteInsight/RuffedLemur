version: '3.8'

services:
  # Frontend Angular Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - api
    networks:
      - ruffedlemur-network

  # Backend Flask API
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    environment:
      - FLASK_APP=ruffedlemur/app.py
      - FLASK_ENV=development
      - PYTHONPATH=/app
      - DATABASE_URI=postgresql://postgres:postgres@db:5432/ruffedlemur
      - FRONTEND_URL=http://localhost:4200
    depends_on:
      - db
      - redis
    networks:
      - ruffedlemur-network
    command: flask run --host=0.0.0.0

  # PostgreSQL Database
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./backend/init-db:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ruffedlemur
    ports:
      - "5432:5432"
    networks:
      - ruffedlemur-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching, Celery, etc.
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ruffedlemur-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Celery worker for background tasks
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend:/app
    environment:
      - PYTHONPATH=/app
      - DATABASE_URI=postgresql://postgres:postgres@db:5432/ruffedlemur
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - api
      - redis
      - db
    networks:
      - ruffedlemur-network
    command: celery -A ruffedlemur.tasks.celery worker --loglevel=info

  # Nginx for static file serving and routing
  nginx:
    image: nginx:1.25
    ports:
      - "80:80"
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - api
    networks:
      - ruffedlemur-network

  # PGAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:7
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@ruffedlemur.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - ruffedlemur-network

volumes:
  postgres_data:
  redis_data:

networks:
  ruffedlemur-network:
    driver: bridge